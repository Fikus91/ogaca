#exemplesection_paf.comm
#exemple d optimisation de section sur un simple paf
#a besoin de MAILPAF.med
# ======================================================================
# COPYRIGHT (C) 2011  FREDERIC RENOU frederic.renou.pb@gmail.com
# THIS PROGRAM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
# IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
# THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
# (AT YOUR OPTION) ANY LATER VERSION.
#
# THIS PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT
# WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
# MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. SEE THE GNU
# GENERAL PUBLIC LICENSE FOR MORE DETAILS.
#
# YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
# ALONG WITH THIS PROGRAM;
# ======================================================================

#simple test ou lon modifie le maillage avec 2 but obtenir un masse minimal
#avoir une contrainte superrieur a 100MPa en un point


#utilise par la suite pour la generation du maillage
#sys.path.append(aster_dir+'/bibpyt/Utilitai')
from Utilitai.sup_gmsh import *
bibli_dir='/home/fred/asteretude/blindopti/bibli'
fichiercata='/home/fred/asteretude/blindopti/paf.cata'
fichiercata3D='/home/fred/asteretude/blindopti/paf.cata3D'
import sys

#importation du catalogue
sys.path.append(bibli_dir)
import catalogue_beta
from opti_section_poutre import *



##traitement aster
DEBUT(PAR_LOT='NON');

MA=LIRE_MAILLAGE(FORMAT='MED',INFO=2);

#on generer les groupes de mail qui seront utilise pour loptimisation chaque groupe commence par un O
#au sein de chaque groupe le profile seras le meme
gr_cree={}
gr_cree["i"]=0.
gr_ini={}
gr_ini['gr']=['OPT']
MA=macro_opti_sec_gene_gr(reuse=MA,MAILLAGE=MA,gr_cree=gr_cree,gr_ini=gr_ini,prefixe='O')

#IMPR_RESU(FORMAT='MED',UNITE=80,RESU=_F(MAILLAGE=MA),);
#on pose les hypotheses
MO=AFFE_MODELE(MAILLAGE=MA,
               AFFE=_F(TOUT='OUI',
                       PHENOMENE='MECANIQUE',
                       MODELISATION='POU_D_E',),);

MATR=DEFI_MATERIAU(ELAS=_F(E=210E9,
                           NU=0.3,
                           RHO=7500),);

CHMAT=AFFE_MATERIAU(MAILLAGE=MA,
                    AFFE=_F(TOUT='OUI',
                            MATER=MATR,),);

#chargement du catalogue
cata=catalogue_beta.CATALOGUE_POUTRE();
cata.recharge(fichiercata)

CHARG=AFFE_CHAR_MECA(MODELE=MO,
                      DDL_IMPO=_F(GROUP_NO='PP0',
                                  DX=0.0,
                                  DY=0.0,
                                  DZ=0.0,
                                  DRX=0.0,
                                  DRY=0.0,
                                  DRZ=0.0,),
                      FORCE_NODALE=_F(GROUP_NO='PP1',
                                      FZ=500000,),);

#definition de la liste ordonne des section a utiliser
listsectionopti=[]
for k in range(0,10):
    listsectionopti.append("rect%d"%k)#rectangle plein
print "listsectionopti",listsectionopti

#definition pour chaque groupe de mail des sections possible
gmasection=[]
for gma in gr_cree["gr"]:
    gmasection.append((gma,listsectionopti))


#definition pour toute les sections une section
#ici toute les poutres sont optimiser et donc on boucle sur gmasection
#mais ce n'est pas forcement le cas
for a in gmasection:
    cata.affecter_GRMA_TYPE(a[0],"rect2")
#
#
#cata.usage()
#a=cata.POUTRE()
#for aa in a:
#    print aa
#
#
##fin de linitialisation
##definition de letat
#
etat_i={}
etat_i["MAIL"]=MA
etat_i["MODELE"]=MO
etat_i["MATERIAU"]=MATR
etat_i["CHAM_MATER"]=CHMAT
etat_i["GMASECTIONPOSSIBLE"]=gmasection

#ce qui change a chaque foi
etat_i["CATALOGUE"]=cata
#
#
#CAREL=AFFE_CARA_ELEM(MODELE=etat_i["MODELE"],
#                         INFO=1,
#                         POUTRE=etat_i["CATALOGUE"].POUTRE()
#                        )
##Resu=MECA_STATIQUE(MODELE=etat_i["MODELE"],
##                        CHAM_MATER=etat_i["CHAM_MATER"],
##                        CARA_ELEM=CAREL,
##                        INST=0,
##                        EXCIT=_F(CHARGE=CHARG,),
##                        );
##definition des parametre
para={}
para["CHARGE"]=CHARG
para["sigmamax"]=140.e6
para["sigmamin"]=-220.e6
para["secdeltasigma"]=28.e6
para["augmentationpure"]=False
para["correction"]=50.
#
##test d orientation_poutre
##import orientation_poutre_beta
##orientation_poutre_beta.orientation_poutre_vyz(GROUP_MA='OPT',MAILLAGE=MA,MODELE=MO,CARA_ELEM=CAREL,CHAM_MATER=CHMAT,UNITE=80,SAUVEGARDE_CHAMP=True,RETOUR_TABLE=False,)

##test individuel
#a=CO('a')
#b=CO('b')
#macro_opti_sec_crit_compliance(etat=etat_i,fn_para=para,valeur=a,gradient=b)
#macro_opti_sec_crit_masse(etat=etat_i,fn_para=para,valeur=a,gradient=b)
#macro_opti_sec_crit_veriflocal(etat=etat_i,fn_para=para,valeur=a,gradient=b)

##test de verif local
para["pas_de_reduction"]=False
contraintes=((macro_opti_sec_crit_verif_local,para),)
etat_f=opti_sec.descente_gradient(tab_fn_contrainte=contraintes,etat_init=etat_i,nb_pas=2,pas_init=1,pas_optimal=None)
#
#
##
#para["pas_de_reduction"]=True
#contraintes=((macro_opti_sec_crit_veriflocal,para),)
#etat_f=opti_sec.descente_gradient(tab_fn_contrainte=contraintes,etat_init=etat_i,nb_pas=6,pas_init=0.7,pas_optimal="brent")
#
###test de descente_gradient
#para["pas_de_reduction"]=False
#contraintes=((macro_opti_sec_crit_masse,para),(macro_opti_sec_crit_veriflocal,para))
#etat_f=opti_sec.descente_gradient(tab_fn_contrainte=contraintes,etat_init=etat_i,nb_pas=6,pas_init=1,pas_optimal="brent")
#
CAREL=AFFE_CARA_ELEM(MODELE=etat_f["MODELE"],
                         INFO=1,
                         POUTRE=etat_f["CATALOGUE"].POUTRE(),
                        )
Resu=MECA_STATIQUE(MODELE=etat_f["MODELE"],
                        CHAM_MATER=etat_f["CHAM_MATER"],
                        CARA_ELEM=CAREL,
                        INST=0,
                        EXCIT=_F(CHARGE=CHARG,),
                  )
Resu=CALC_ELEM(reuse =Resu,
                 RESULTAT=Resu,
                 TOUT_ORDRE='OUI',
                 OPTION=('SIEF_ELNO','SIPO_ELNO'))#SIGM_ELNO_DEPL
IMPR_RESU(FORMAT='RESULTAT',RESU=_F(MAILLAGE=etat_f["MAIL"],RESULTAT=Resu,),);

#visualisation des resultats
etat_i["CATALOGUE"].affiche_affectation()
etat_f["CATALOGUE"].affiche_affectation()

etat_f["CATALOGUE"].sauvegarde_pour_3d(fichiercata3D,MODELE=etat_f["MODELE"],MAILLAGE=etat_f["MAIL"],CHAM_MATER=etat_f["CHAM_MATER"],CARA_ELEM=CAREL)



FIN();
